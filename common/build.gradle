//file:noinspection GroovyAssignabilityCheck
plugins {
    id 'java'
    id 'java-library'
    id 'org.spongepowered.gradle.vanilla' version '0.2.1-SNAPSHOT'
}

archivesBaseName = "${archives_base_name}-Common"

minecraft {
    version(minecraft_version)
}

dependencies {
    compileOnly group: 'org.spongepowered', name: 'mixin', version: '0.8.5'
    compileOnly group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'

    compileOnly "dev.the-fireplace:Fireplace-Lib-Common:${project.fireplacelib_version}"
}

sourceSets {
    main {
        resources {
            srcDirs += [
                    'src/main/generated'
            ]
        }
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

if (hasProperty('nexusUsername') || System.getenv("NEXUS_USERNAME") != null) {
    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                groupId project.maven_group
                artifactId project.archivesBaseName
                version project.version
                pom {
                    name = project.readable_name
                    packaging = 'jar'
                    description = project.maven_description
                    url = project.modrinth_url
                    scm {
                        connection = "scm:svn:${project.github_url}.git"
                        developerConnection = "scm:svn:${project.github_url}.git"
                        url = project.github_url
                    }

                    licenses {
                        license {
                            name = project.license_name
                            url = project.license_url
                        }
                    }

                    developers {
                        developer {
                            id = 'the_fireplace'
                            name = 'The_Fireplace'
                            email = 'git@the-fireplace.dev'
                        }
                    }
                }
            }
        }
        repositories {
            maven {
                def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
                def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    username = findProperty('nexusUsername') ?: System.getenv("NEXUS_USERNAME")
                    password = findProperty('nexusPassword') ?: System.getenv("NEXUS_PASSWORD")
                }
            }
        }
    }

    signing {
        sign publishing.publications.mavenJava
    }
}